# Author: Justin Yoo
# Link: https://projecteuler.net/problem=2

# Prompt:
# Each new term in the Fibonacci sequence is generated by adding the previous two terms.  
# By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four 
# million, find the sum of the even-valued terms.

# Start the Fibonacci sequence.
fibonacci_sequence_list = [1, 2, 3]

fibonacci_even_term_list = []

# Generate a Fibonacci sequence up until the maximum term is less than four 
# million.
while max(fibonacci_sequence_list) < 4000000:
  value_1 = fibonacci_sequence_list[len(fibonacci_sequence_list) - 1]
  value_2 = fibonacci_sequence_list[len(fibonacci_sequence_list) - 2]
  fibonacci_sequence_list.append(value_1 + value_2)

# Iterate through the Fibonacci sequence and find the even numbered terms.
# Append them into a new list.
for i in range(0,len(fibonacci_sequence_list)):
  if fibonacci_sequence_list[i] % 2 == 0:
    fibonacci_even_term_list.append(fibonacci_sequence_list[i])
  else:
    continue

print('The list of even terms from the Fibonacci sequence is ' + str(fibonacci_even_term_list))
print('The sum of the even terms from the Fibonacci sequence is ' + str(sum(fibonacci_even_term_list)))